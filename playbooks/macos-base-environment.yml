---
# Base development environment setup for macOS
# Includes shell environment, development tools, and core utilities
- name: macOS Base Development Environment Setup
  hosts: all
  gather_facts: true
  vars:
    dev_user: "{{ ansible_user | default(lookup('env', 'USER')) }}"
    dev_home: "{{ ansible_env.HOME | default('/Users/' + dev_user) }}"

  pre_tasks:
    - name: Verify running on macOS
      assert:
        that:
          - ansible_os_family == "Darwin"
        fail_msg: "This playbook is designed for macOS only"
        success_msg: "✓ Running on macOS {{ ansible_distribution_version }}"

    - name: Verify pbcopy is available (built-in on macOS)
      command: which pbcopy
      register: pbcopy_check
      changed_when: false
      failed_when: false

    - name: Display pbcopy status
      debug:
        msg: |
          {% if pbcopy_check.rc == 0 %}
          ✓ pbcopy available at {{ pbcopy_check.stdout }}
          {% else %}
          ⚠ pbcopy not found (should be built-in on macOS)
          {% endif %}

    - name: Check if Homebrew is installed
      stat:
        path: /opt/homebrew/bin/brew
      register: homebrew_check
      become: no

    - name: Display Homebrew status
      debug:
        msg: |
          {% if homebrew_check.stat.exists %}
          ✓ Homebrew is already installed
          {% else %}
          → Homebrew will be installed by roles
          {% endif %}

  roles:
    # Shell Environment
    - fish-shell
    - fish-repository-setup
    - scripts-repository-setup
    - mise-tools
    - rust-toolchain
    - fish-config

    # Development Environment
    - cli-tools
    - dev-folders
    - tmux
    - neovim-latest
    - tree-sitter-cli
    - nvim-config
    - hugo
    - docker

  post_tasks:
    - name: Display base environment setup completion
      debug:
        msg: |
          🚀 macOS Base Development Environment Setup Complete!

          ⚠️  IMPORTANT: Some tasks required sudo access:
          - Adding Fish to /etc/shells
          - Setting Fish as default shell
          You may have been prompted for your password during installation.

          🐚 Shell Environment:
          ✓ Homebrew package manager
          ✓ Fish shell with syntax highlighting and modern features
          ✓ Fish dotfiles cloned from: git@github.com:stonecharioteer/dotfiles-fish.git
          ✓ Personal scripts repository cloned from: git@github.com:stonecharioteer/scripts.git
          ✓ mise runtime manager (Node.js, Python, Go, Rust)
          ✓ Enhanced Rust toolchain with cargo-binstall
          ✓ Fish configuration with abbreviations and integrations

          🛠️ Development Environment:
          ✓ Modern CLI tools (ripgrep, fd, fzf, starship, gum, etc.)
          ✓ Database tools (PostgreSQL client, pgcli)
          ✓ Development folder structure
          ✓ tmux via Homebrew
          ✓ Neovim via Homebrew with vim symlink
          ✓ tree-sitter CLI for syntax highlighting
          ✓ Custom Neovim configuration from git@github.com:stonecharioteer/nvim-config.git
          ✓ Hugo Extended static site generator
          ✓ Docker Desktop installed

          📋 Next Steps:
          1. Restart your terminal or run: exec fish
          2. Launch Docker Desktop from Applications
          3. Test development environment:
             - tmux new-session -d -s test
             - docker run hello-world (after launching Docker Desktop)
             - nvim --version
             - mise list (verify language runtimes)
             - psql --version && pgcli --version (database tools)
             - hugo version (static site generator)

          🎯 Your macOS base development environment is ready!
          - Modern shell: Fish with mise for language management
          - Development tools: tmux, Neovim, Docker
          - All CLI tools integrated and configured for productivity

          💡 For GUI enhancements, also run:
          - ansible-playbook playbooks/macos-gui-environment.yml
