---
# Comprehensive failsafe checks to prevent destructive operations
- name: Check if qtile config directory exists
  stat:
    path: "{{ qtile_home }}/.config/qtile"
  register: qtile_config_exists

- name: Check if existing qtile directory is a git repository
  stat:
    path: "{{ qtile_home }}/.config/qtile/.git"
  register: qtile_is_git_repo
  when: qtile_config_exists.stat.exists

- name: Get git remote URL if it's a git repository
  shell: |
    cd {{ qtile_home }}/.config/qtile
    git remote get-url origin 2>/dev/null || echo "no-remote"
  register: qtile_git_remote
  become_user: "{{ qtile_user }}"
  when: qtile_config_exists.stat.exists and qtile_is_git_repo.stat.exists
  changed_when: false

- name: Get current git branch if it's a git repository
  shell: |
    cd {{ qtile_home }}/.config/qtile
    git branch --show-current 2>/dev/null || echo "unknown"
  register: qtile_git_branch
  become_user: "{{ qtile_user }}"
  when: qtile_config_exists.stat.exists and qtile_is_git_repo.stat.exists
  changed_when: false

- name: Check if /opt/qtile directory exists
  stat:
    path: "{{ qtile_venv_path }}"
  register: qtile_venv_exists

- name: Check if /opt/qtile is a valid Python virtual environment
  stat:
    path: "{{ qtile_venv_path }}/bin/python"
  register: qtile_venv_valid
  when: qtile_venv_exists.stat.exists

- name: Check if qtile is already installed in venv
  shell: |
    {{ qtile_venv_path }}/bin/python -c "import qtile; print('installed')" 2>/dev/null || echo "not-installed"
  register: qtile_installed_check
  when: qtile_venv_exists.stat.exists and qtile_venv_valid.stat.exists
  changed_when: false

- name: Check if Alacritty source directory exists
  stat:
    path: "{{ qtile_home }}/code/tools/alacritty"
  register: alacritty_source_exists

- name: Check if Alacritty directory is a git repository
  stat:
    path: "{{ qtile_home }}/code/tools/alacritty/.git"
  register: alacritty_is_git_repo
  when: alacritty_source_exists.stat.exists

- name: Get Alacritty git remote URL
  shell: |
    cd {{ qtile_home }}/code/tools/alacritty
    git remote get-url origin 2>/dev/null || echo "no-remote"
  register: alacritty_git_remote
  become_user: "{{ qtile_user }}"
  when: alacritty_source_exists.stat.exists and alacritty_is_git_repo.stat.exists
  changed_when: false

- name: Check if Alacritty binary is already installed
  stat:
    path: /usr/local/bin/alacritty
  register: alacritty_binary_exists

- name: Display current state summary
  debug:
    msg: |
      === CURRENT SYSTEM STATE ===
      Qtile config directory: {{ 'EXISTS' if qtile_config_exists.stat.exists else 'NOT FOUND' }}
      {% if qtile_config_exists.stat.exists %}
      Qtile is git repo: {{ 'YES' if qtile_is_git_repo.stat.exists else 'NO' }}
      {% if qtile_is_git_repo.stat.exists %}
      Git remote: {{ qtile_git_remote.stdout }}
      Current branch: {{ qtile_git_branch.stdout }}
      {% endif %}
      {% endif %}
      /opt/qtile venv: {{ 'EXISTS' if qtile_venv_exists.stat.exists else 'NOT FOUND' }}
      {% if qtile_venv_exists.stat.exists %}
      Valid Python venv: {{ 'YES' if qtile_venv_valid.stat.exists else 'NO' }}
      {% if qtile_venv_valid.stat.exists %}
      Qtile installed: {{ qtile_installed_check.stdout }}
      {% endif %}
      {% endif %}
      Alacritty source: {{ 'EXISTS' if alacritty_source_exists.stat.exists else 'NOT FOUND' }}
      {% if alacritty_source_exists.stat.exists %}
      Alacritty is git repo: {{ 'YES' if alacritty_is_git_repo.stat.exists else 'NO' }}
      {% if alacritty_is_git_repo.stat.exists %}
      Alacritty remote: {{ alacritty_git_remote.stdout }}
      {% endif %}
      {% endif %}
      Alacritty binary: {{ 'INSTALLED' if alacritty_binary_exists.stat.exists else 'NOT FOUND' }}

# FAILSAFE: Stop if qtile config exists but is not the correct repository
- name: FAILSAFE - Stop if qtile config directory exists but is not our repository
  fail:
    msg: |
      STOP: ~/.config/qtile exists but is not a git repository.
      This could be a different qtile configuration. Please backup or remove it manually.
      Found at: {{ qtile_home }}/.config/qtile
  when: 
    - qtile_config_exists.stat.exists
    - not qtile_is_git_repo.stat.exists

- name: FAILSAFE - Stop if qtile config is a different git repository
  fail:
    msg: |
      STOP: ~/.config/qtile is a git repository but not the expected one.
      Expected: https://github.com/stonecharioteer/dotfiles-qtile.git
      Found: {{ qtile_git_remote.stdout }}
      Please backup or remove it manually, or update the remote URL.
  when:
    - qtile_config_exists.stat.exists
    - qtile_is_git_repo.stat.exists
    - qtile_git_remote.stdout not in ['https://github.com/stonecharioteer/dotfiles-qtile.git', 'git@github.com:stonecharioteer/dotfiles-qtile.git']

# FAILSAFE: Stop if /opt/qtile exists but is not a valid venv
- name: FAILSAFE - Stop if /opt/qtile exists but is not a valid Python virtual environment
  fail:
    msg: |
      STOP: /opt/qtile directory exists but is not a valid Python virtual environment.
      This could be a different installation. Please backup or remove it manually.
      Found at: {{ qtile_venv_path }}
  when:
    - qtile_venv_exists.stat.exists
    - not qtile_venv_valid.stat.exists

# FAILSAFE: Stop if Alacritty source exists but is not the correct repository
- name: FAILSAFE - Stop if Alacritty source exists but is not our repository
  fail:
    msg: |
      STOP: ~/code/tools/alacritty exists but is not a git repository.
      This could be a different Alacritty installation. Please backup or remove it manually.
      Found at: {{ qtile_home }}/code/tools/alacritty
  when:
    - alacritty_source_exists.stat.exists
    - not alacritty_is_git_repo.stat.exists

- name: FAILSAFE - Stop if Alacritty source is a different git repository
  fail:
    msg: |
      STOP: ~/code/tools/alacritty is a git repository but not the expected one.
      Expected: https://github.com/alacritty/alacritty.git
      Found: {{ alacritty_git_remote.stdout }}
      Please backup or remove it manually, or update the remote URL.
  when:
    - alacritty_source_exists.stat.exists
    - alacritty_is_git_repo.stat.exists
    - alacritty_git_remote.stdout not in ['https://github.com/alacritty/alacritty.git', 'git@github.com:alacritty/alacritty.git']

# Set facts for other roles to use
- name: Set facts about current installation state
  set_fact:
    qtile_config_repo_exists: "{{ qtile_config_exists.stat.exists and qtile_is_git_repo.stat.exists }}"
    qtile_venv_ready: "{{ qtile_venv_exists.stat.exists and qtile_venv_valid.stat.exists }}"
    qtile_already_installed: "{{ qtile_venv_exists.stat.exists and qtile_venv_valid.stat.exists and qtile_installed_check is defined and qtile_installed_check.stdout == 'installed' }}"
    alacritty_source_repo_exists: "{{ alacritty_source_exists.stat.exists and alacritty_is_git_repo.stat.exists }}"
    alacritty_already_built: "{{ alacritty_binary_exists.stat.exists }}"

# Hardware Detection for conditional features
- name: Hardware detection for conditional features
  block:
    - name: Check for battery (primary laptop indicator)
      stat:
        path: /sys/class/power_supply/BAT0
      register: battery_check

    - name: Check for laptop DMI chassis type
      shell: dmidecode -s chassis-type 2>/dev/null || echo "unknown"
      register: chassis_type
      ignore_errors: yes

    - name: Check for laptop keywords in DMI product name
      shell: dmidecode -s system-product-name 2>/dev/null | grep -i -E "(laptop|notebook|portable)" || echo "none"
      register: product_name_check
      ignore_errors: yes

    - name: Set hardware detection facts
      set_fact:
        is_laptop: >-
          {{
            battery_check.stat.exists or
            chassis_type.stdout in ['Notebook', 'Laptop', 'Portable'] or
            product_name_check.stdout != "none"
          }}

- name: Display installation plan
  debug:
    msg: |
      === HARDWARE DETECTION ===
      System type: {{ 'LAPTOP' if is_laptop else 'DESKTOP' }}
      Battery detected: {{ battery_check.stat.exists }}
      Chassis type: {{ chassis_type.stdout }}
      
      === INSTALLATION PLAN ===
      Qtile config: {{ 'UPDATE existing repository' if qtile_config_repo_exists else 'CLONE new repository' }}
      Python venv: {{ 'USE existing venv' if qtile_venv_ready else 'CREATE new venv' }}
      Qtile package: {{ 'SKIP - already installed' if qtile_already_installed else 'INSTALL qtile + psutil' }}
      Alacritty source: {{ 'UPDATE existing repository' if alacritty_source_repo_exists else 'CLONE new repository' }}
      Alacritty binary: {{ 'SKIP - already built' if alacritty_already_built else 'BUILD from source' }}
      
      {{ 'LAPTOP FEATURES: Battery monitoring, touchpad gestures, auto-rotation, sleep services' if is_laptop else 'DESKTOP FEATURES: Monitor management only (no laptop-specific features)' }}
      
      Proceeding with safe, non-destructive operations...