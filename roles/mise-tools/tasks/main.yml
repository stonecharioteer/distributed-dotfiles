---
- name: Install essential build tools (Debian/Ubuntu)
  package:
    name:
      - build-essential
      - pkg-config
      - libssl-dev
      - bison
      - flex
      - make
      - cmake
      - autoconf
      - automake
      - libtool
      - git
      - curl
      - wget
      - unzip
      - tar
      - gzip
      - m4
      - texinfo
      - gettext
      - zlib1g-dev
      - libffi-dev
      - libncurses5-dev
      - libreadline-dev
      - libsqlite3-dev
      - libgdbm-dev
      - libbz2-dev
      - liblzma-dev
      - uuid-dev
    state: present
  when: ansible_os_family == "Debian"

- name: Install essential build tools (Arch)
  package:
    name:
      - base-devel
      - openssl
      - pkg-config
      - bison
      - flex
      - make
      - cmake
      - autoconf
      - automake
      - libtool
      - git
      - curl
      - wget
      - unzip
      - tar
      - gzip
      - m4
      - texinfo
      - gettext
      - zlib
      - libffi
      - ncurses
      - readline
      - sqlite
      - gdbm
      - bzip2
      - xz
      - util-linux
    state: present
  when: ansible_os_family == "Archlinux"

- name: Install essential build tools (Fedora)
  package:
    name:
      - gcc
      - gcc-c++
      - make
      - cmake
      - autoconf
      - automake
      - libtool
      - pkg-config
      - openssl-devel
      - bison
      - flex
      - git
      - curl
      - wget
      - unzip
      - tar
      - gzip
      - m4
      - texinfo
      - gettext
      - zlib-devel
      - libffi-devel
      - ncurses-devel
      - readline-devel
      - sqlite-devel
      - gdbm-devel
      - bzip2-devel
      - xz-devel
      - libuuid-devel
    state: present
  when: ansible_os_family == "RedHat"

- name: Check if mise is already installed
  stat:
    path: "{{ fish_home }}/.local/bin/mise"
  register: mise_exists
  become: no

- name: Download and install mise (runtime version manager)
  shell: |
    curl https://mise.run | sh
  become: no
  environment:
    HOME: "{{ fish_home }}"
  when: not mise_exists.stat.exists

- name: Create mise config directory
  file:
    path: "{{ fish_home }}/.config/mise"
    state: directory
    owner: "{{ fish_user }}"
    group: "{{ fish_user }}"
    mode: '0755'
  become: no

- name: Install Node.js via mise
  shell: |
    "{{ fish_home }}/.local/bin/mise" install node@lts
    "{{ fish_home }}/.local/bin/mise" global node@lts
  environment:
    HOME: "{{ fish_home }}"
  become: no
  ignore_errors: yes

- name: Install Python via mise
  shell: |
    "{{ fish_home }}/.local/bin/mise" install python@latest
    "{{ fish_home }}/.local/bin/mise" global python@latest
  environment:
    HOME: "{{ fish_home }}"
  become: no
  ignore_errors: yes

- name: Install Go via mise
  shell: |
    "{{ fish_home }}/.local/bin/mise" install go@latest
    "{{ fish_home }}/.local/bin/mise" global go@latest
  environment:
    HOME: "{{ fish_home }}"
  become: no
  ignore_errors: yes

- name: Install Rust via mise
  shell: |
    "{{ fish_home }}/.local/bin/mise" install rust@latest
    "{{ fish_home }}/.local/bin/mise" global rust@latest
  environment:
    HOME: "{{ fish_home }}"
  become: no
  ignore_errors: yes

- name: Install fx JSON viewer via Go (if Go is available)
  shell: |
    eval "$("{{ fish_home }}/.local/bin/mise" activate bash)"
    if command -v go >/dev/null 2>&1; then
      go install github.com/antonmedv/fx@latest
    fi
  args:
    executable: /bin/bash
  become: no
  environment:
    HOME: "{{ fish_home }}"
  ignore_errors: yes

- name: Check if uv is already installed
  command: which uv
  register: uv_exists
  ignore_errors: yes
  become: no

- name: Install uv Python package manager via official installer
  shell: |
    curl -LsSf https://astral.sh/uv/install.sh | sh
  environment:
    HOME: "{{ fish_home }}"
  become: no
  when: uv_exists.rc != 0

- name: Ensure mise is in PATH for fish shell
  lineinfile:
    path: "{{ fish_home }}/.config/fish/fish_variables"
    line: "SETUVAR fish_user_paths:{{ fish_home }}/\\.local/bin\\x1e{{ fish_home }}/\\.cargo/bin\\x1e{{ fish_home }}/\\.fzf/bin"
    regexp: "^SETUVAR fish_user_paths:"
    create: yes
    owner: "{{ fish_user }}"
    group: "{{ fish_user }}"
  become: no