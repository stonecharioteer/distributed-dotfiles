---
# macOS-specific tmux installation via Homebrew
- name: Install tmux and dependencies via Homebrew
  shell: |
    export HOMEBREW_NO_AUTO_UPDATE=1
    export PATH="/opt/homebrew/bin:$PATH"

    # Install tmux and its dependencies
    packages=(tmux libevent ncurses)

    for package in "${packages[@]}"; do
      if ! brew list "$package" &>/dev/null; then
        echo "Installing $package..."
        brew install "$package" || echo "Warning: Failed to install $package"
      else
        echo "$package is already installed"
      fi
    done
  args:
    executable: /bin/bash
  become: no
  register: tmux_install_result
  changed_when: "'Installing' in tmux_install_result.stdout"
  tags: blog

- name: Display tmux installation output
  debug:
    msg: "{{ tmux_install_result.stdout_lines }}"
  when: tmux_install_result.stdout_lines is defined
  tags: blog

- name: Verify tmux installation
  command: tmux -V
  register: tmux_version
  changed_when: false
  become: no
  tags: blog

- name: Display tmux version
  debug:
    msg: "✓ tmux installed via Homebrew: {{ tmux_version.stdout }}"
  tags: blog

# Install oh-my-tmux configuration (same for all platforms)
- name: Check if oh-my-tmux is already installed
  stat:
    path: "{{ dev_home }}/.tmux/.git"
  register: oh_my_tmux_exists
  become: no
  tags:
    - oh-my-tmux
    - blog

- name: Install oh-my-tmux
  tags:
    - oh-my-tmux
    - blog
  block:
    - name: Clone oh-my-tmux repository
      git:
        repo: https://github.com/gpakosz/.tmux.git
        dest: "{{ dev_home }}/.tmux"
        update: yes
      become: no

    - name: Create symlink to .tmux.conf
      file:
        src: "{{ dev_home }}/.tmux/.tmux.conf"
        dest: "{{ dev_home }}/.tmux.conf"
        state: link
        force: yes
      become: no

    - name: Copy .tmux.conf.local template
      copy:
        src: "{{ dev_home }}/.tmux/.tmux.conf.local"
        dest: "{{ dev_home }}/.tmux.conf.local"
        remote_src: yes
        force: no
      become: no

    - name: Enable mouse mode in .tmux.conf.local
      lineinfile:
        path: "{{ dev_home }}/.tmux.conf.local"
        regexp: '^#set -g mouse on'
        line: 'set -g mouse on'
        backrefs: yes
      become: no

    - name: Enable vi mode keys in .tmux.conf.local
      lineinfile:
        path: "{{ dev_home }}/.tmux.conf.local"
        regexp: '^#{{ item }}'
        line: '{{ item }}'
        backrefs: yes
      loop:
        - 'set -g status-keys vi'
        - 'set -g mode-keys vi'
      become: no

    - name: Enable powerline separators in .tmux.conf.local
      replace:
        path: "{{ dev_home }}/.tmux.conf.local"
        regexp: '^#({{ item.key }}=.*)$'
        replace: '\1'
      loop:
        - { key: "tmux_conf_theme_left_separator_main" }
        - { key: "tmux_conf_theme_left_separator_sub" }
        - { key: "tmux_conf_theme_right_separator_main" }
        - { key: "tmux_conf_theme_right_separator_sub" }
      become: no

    - name: Display oh-my-tmux installation success
      debug:
        msg: |
          ✓ oh-my-tmux configuration installed on macOS!
          Location: {{ dev_home }}/.tmux/
          Config: {{ dev_home }}/.tmux.conf.local

          Features enabled:
          - Mouse mode (toggle with <prefix> m)
          - Vi key bindings for navigation
          - Powerline separators with Nerd Font icons

          Customize further by editing ~/.tmux.conf.local
          Press <prefix> e to open the config in your editor
          (prefix is Ctrl+b by default, or Ctrl+a with oh-my-tmux)

  when: not oh_my_tmux_exists.stat.exists or oh_my_tmux_exists.stat.islnk is defined

- name: Update oh-my-tmux if already installed
  tags:
    - oh-my-tmux
    - blog
  block:
    - name: Pull latest oh-my-tmux changes
      git:
        repo: https://github.com/gpakosz/.tmux.git
        dest: "{{ dev_home }}/.tmux"
        update: yes
      become: no
      register: oh_my_tmux_updated

    - name: Display oh-my-tmux update status
      debug:
        msg: |
          {% if oh_my_tmux_updated.changed %}
          ✓ oh-my-tmux updated to latest version
          {% else %}
          ✓ oh-my-tmux already up to date
          {% endif %}

  when: oh_my_tmux_exists.stat.exists and oh_my_tmux_exists.stat.islnk is not defined
